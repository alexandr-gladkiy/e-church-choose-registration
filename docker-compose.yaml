version: '3.9'

services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: event_registration
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend-api/db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - eventnet

  backend-api:
    build:
      context: ./backend-api
    restart: always
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: event_registration
      PGUSER: postgres
      PGPASSWORD: postgres
      JWT_SECRET: supersecret
      PORT: 3000
      DOMAIN: ${DOMAIN}
      ADMIN_DOMAIN: ${ADMIN_DOMAIN}
      API_DOMAIN: ${API_DOMAIN}
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    networks:
      - eventnet

  admin-app:
    build:
      context: ./admin-app
      args:
        VITE_API_URL: ${API_DOMAIN:-http://localhost:3000/api}
    restart: always
    environment:
      VITE_API_URL: ${API_DOMAIN:-http://localhost:3000/api}
    ports:
      - '5173:5173'
    depends_on:
      - backend-api
    networks:
      - eventnet

  telegram-app:
    build:
      context: ./telegram-app
    restart: always
    environment:
      VITE_API_URL: ${API_DOMAIN:-http://localhost:3000/api}
    ports:
      - '5174:5174'
    depends_on:
      - backend-api
    networks:
      - eventnet

  telegram-bot:
    build:
      context: ./telegram-bot
    restart: always
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      WEBAPP_URL: ${DOMAIN:-http://localhost:5174}
    depends_on:
      - telegram-app
    networks:
      - eventnet

volumes:
  pgdata:

networks:
  eventnet:
    driver: bridge 