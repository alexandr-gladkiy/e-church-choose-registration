#!/bin/bash

# –ë—ã—Å—Ç—Ä—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è event-registration
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./quick-deploy.sh [GITHUB_REPO_URL] [BOT_TOKEN]

set -e

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -lt 2 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <GITHUB_REPO_URL> <BOT_TOKEN>"
    echo "–ü—Ä–∏–º–µ—Ä: $0 https://github.com/username/event-registration.git 1234567890:ABCdefGHIjklMNOpqrsTUVwxyz"
    exit 1
fi

GITHUB_REPO_URL=$1
BOT_TOKEN=$2
PROJECT_NAME="event-registration"

log "üöÄ –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ event-registration"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
log "–û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
sudo apt-get update -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º Docker..."
if ! command -v docker &> /dev/null; then
    log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    log "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ—Å—å –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: newgrp docker"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose..."
if ! command -v docker-compose &> /dev/null; then
    log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
    sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
log "–°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞..."
sudo mkdir -p /opt/$PROJECT_NAME
sudo chown $USER:$USER /opt/$PROJECT_NAME
cd /opt/$PROJECT_NAME

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
log "–ö–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç..."
if [ -d ".git" ]; then
    log "–ü—Ä–æ–µ–∫—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º..."
    git pull origin main
else
    git clone $GITHUB_REPO_URL .
fi

# –°–æ–∑–¥–∞–Ω–∏–µ .env
log "–°–æ–∑–¥–∞—ë–º .env —Ñ–∞–π–ª..."
cat > .env << EOF
BOT_TOKEN=$BOT_TOKEN
EOF

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
log "–°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down --remove-orphans || true
docker-compose build --no-cache || {
    log "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏, –ø—Ä–æ–±—É–µ–º –±–µ–∑ --no-cache..."
    docker-compose build
}
docker-compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
log "–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
docker-compose ps

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
log "–°–æ–∑–¥–∞—ë–º —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
cat > /usr/local/bin/event-manage << 'EOF'
#!/bin/bash
cd /opt/event-registration
case "$1" in
    status) docker-compose ps ;;
    logs) docker-compose logs -f ;;
    restart) docker-compose restart ;;
    stop) docker-compose down ;;
    start) docker-compose up -d ;;
    update) git pull && docker-compose build && docker-compose up -d ;;
    *) echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: event-manage {status|logs|restart|stop|start|update}" ;;
esac
EOF

chmod +x /usr/local/bin/event-manage

# –†–µ–∑—É–ª—å—Ç–∞—Ç
log "‚úÖ –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "   ‚Ä¢ Telegram WebApp: http://$(hostname -I | awk '{print $1}'):5174"
echo "   ‚Ä¢ Admin Panel: http://$(hostname -I | awk '{print $1}'):5173"
echo "   ‚Ä¢ API: http://$(hostname -I | awk '{print $1}'):3000"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   ‚Ä¢ event-manage status  - —Å—Ç–∞—Ç—É—Å"
echo "   ‚Ä¢ event-manage logs    - –ª–æ–≥–∏"
echo "   ‚Ä¢ event-manage restart - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ–º–µ–Ω –∏ SSL"
echo "   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram"
echo "   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ nginx –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è"
echo ""

log "üéâ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!" 